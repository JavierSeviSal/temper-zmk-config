/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define NUM 1
#define NAV 2
#define FUN 3
#define MAC 4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        macro {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    behaviors {
        media: media {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREVIOUS>;

            tapping-term-ms = <400>;
        };

        hm: homerow-mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homehow-mods";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        tm: thumb_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Thumb_mods";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
        };

        weak: weak {
            compatible = "zmk,behavior-hold-tap";
            label = "WEAK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <230>;
        };

        tmb_lyr1: tmb_lyr1 {
            compatible = "zmk,behavior-mod-morph";
            label = "TMB_LYR1";
            bindings = <&mo 1>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        tmb_lyr2: tmb_lyr2 {
            compatible = "zmk,behavior-mod-morph";
            label = "TMB_LYR2";
            bindings = <&mo 2>, <&kp BACKSPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        barra: barra {
            compatible = "zmk,behavior-mod-morph";
            label = "BARRA";
            bindings = <&kp SLASH>, <&kp NON_US_BSLH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        borrar: borrar {
            compatible = "zmk,behavior-mod-morph";
            label = "BORRAR";
            bindings = <&lt 2 BACKSPACE>, <&kp BACKSPACE>;

            #binding-cells = <0>;
            mods = <(MOD_RALT|MOD_LALT)>;
        };

        del: del {
            compatible = "zmk,behavior-mod-morph";
            label = "DEL";
            bindings = <&lt 1 DELETE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RALT|MOD_LALT)>;
        };

        exclbarra: exclbarra {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCLBARRA";
            bindings = <&kp EXCLAMATION>, <&kp PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        excl_esp: excl_esp {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCL_ESP";
            bindings = <&exclbarra>, <&kp RA(NUMBER_1)>;

            #binding-cells = <0>;
            mods = <(MOD_RALT|MOD_LALT)>;
        };

        perc_euro: perc_euro {
            compatible = "zmk,behavior-mod-morph";
            label = "PERC_EURO";
            bindings = <&kp PERCENT>, <&kp RA(N5)>;

            #binding-cells = <0>;
            mods = <(MOD_RALT|MOD_LALT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <14 15>;
            timeout-ms = <100>;
            layers = <0>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <20 21>;
            layers = <0>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <21 22>;
            layers = <0>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <22 23>;
            layers = <0>;
        };

        save {
            bindings = <&kp LC(S)>;
            key-positions = <10 11>;
            layers = <0>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0>;
        };

        close {
            bindings = <&kp LC(W)>;
            key-positions = <1 0>;
            layers = <2>;
        };

        kill {
            bindings = <&kp LA(F4)>;
            key-positions = <1 2 0>;
            layers = <2>;
        };

        num_lock {
            bindings = <&kp KP_NLCK>;
            key-positions = <16 17 18>;
            layers = <1>;
        };

        refresh {
            bindings = <&kp LC(F5)>;
            key-positions = <7 8>;
        };

        cntrl_bootloader {
            bindings = <&bootloader>;
            key-positions = <0 5>;
            layers = <3>;
        };

        mac_layer {
            bindings = <&mo 4>;
            key-positions = <31 34>;
        };

        previous {
            bindings = <&kp LA(LEFT_ARROW)>;
            key-positions = <16 17>;
            layers = <2>;
        };

        next {
            bindings = <&kp LA(RIGHT_ARROW)>;
            key-positions = <17 18>;
            layers = <2>;
        };
    };

    macros {
        // Windows sleep key

        win_sleep: win_sleep {
            wait-ms = <50>;
            tap-ms = <5>;
            compatible = "zmk,behavior-macro";
            label = "WIN_SLEEP_KEY";
            #binding-cells = <0>;
            bindings = <&kp LG(X) &kp U &kp S>;
        };

        calc: calc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(R) &kp C &kp A &kp L &kp C &kp ENTER>;
            label = "CALC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DEF";
            bindings = <
&kp Q             &kp W                 &kp E            &kp R             &kp T      &kp Y      &kp U              &kp I            &kp O                  &kp P
&weak LEFT_GUI A  &weak LEFT_CONTROL S  &hm RIGHT_ALT D  &hm LEFT_SHIFT F  &kp G      &kp H      &hm RIGHT_SHIFT J  &hm RIGHT_ALT K  &weak RIGHT_CONTROL L  &kp SEMI
&kp Z             &kp X                 &kp C            &kp V             &kp B      &kp N      &kp M              &kp COMMA        &kp DOT                &kp FSLH
                                        &kp TAB          &del              &kp SPACE  &kp ENTER  &borrar            &mo 3
            >;
        };

        num_layer {
            display-name = "NUM";
            bindings = <
&kp GRAVE  &kp AT                 &kp LBRC           &kp RBRC             &perc_euro  &kp STAR    &kp KP_NUMBER_7              &kp KP_NUMBER_8            &kp KP_NUMBER_9                &kp PLUS
&kp CARET  &hm LEFT_CONTROL HASH  &hm LEFT_ALT LPAR  &hm LEFT_SHIFT RPAR  &kp DLLR    &barra      &hm RIGHT_SHIFT KP_NUMBER_4  &hm RIGHT_ALT KP_NUMBER_5  &hm RIGHT_CONTROL KP_NUMBER_6  &kp MINUS
&kp SQT    &kp AMPERSAND          &kp LBKT           &kp RBKT             &excl_esp   &kp PERIOD  &kp KP_NUMBER_1              &kp KP_NUMBER_2            &kp KP_NUMBER_3                &kp EQUAL
                                  &trans             &trans               &trans      &trans      &trans                       &kp KP_NUMBER_0
            >;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
&kp ESCAPE    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP    &none   &none   &kp HOME  &kp UP    &kp PAGE_UP    &none
&sk LEFT_GUI  &sk LCTRL   &sk LEFT_ALT  &sk LEFT_SHIFT  &none   &none   &kp LEFT  &kp DOWN  &kp RIGHT      &none
&none         &kp C_PREV  &kp C_PP      &kp C_NEXT      &none   &none   &kp END   &none     &kp PAGE_DOWN  &none
                          &trans        &none           &trans  &trans  &none     &none
            >;
        };

        fun_layer {
            display-name = "FUN";
            bindings = <
&bootloader   &none         &kp PRINTSCREEN  &win_sleep    &out OUT_TOG  &bootloader  &kp F7  &kp F8  &kp F9  &kp F12
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &none        &kp F4  &kp F5  &kp F6  &kp F11
&none         &none         &bt BT_CLR       &none         &none         &none        &kp F1  &kp F2  &kp F3  &kp F10
                            &none            &none         &none         &none        &none   &none
            >;
        };

        mac_layer {
            display-name = "MAC";
            bindings = <
&trans              &trans              &trans              &trans              &trans  &trans  &trans  &trans              &trans     &trans
&kp LS(LA(LC(F5)))  &kp LS(LA(LC(F6)))  &kp LC(LS(LA(F9)))  &kp LS(LA(LC(F8)))  &trans  &trans  &trans  &kp LS(LA(LC(F7)))  &kp LG(E)  &kp LG(I)
&trans              &trans              &trans              &trans              &trans  &trans  &trans  &trans              &trans     &trans
                                        &trans              &trans              &trans  &trans  &trans  &trans
            >;
        };
    };
};
